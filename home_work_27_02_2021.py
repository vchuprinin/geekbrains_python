from random import choice


# 1
print('*' * 50, '‚Ññ1\n')
num = {'one': '–æ–¥–∏–Ω', 'two': '–¥–≤–∞', 'three': '—Ç—Ä–∏', 'four': '—á–µ—Ç—ã—Ä–µ', 'five': '–ø—è—Ç—å', 'six': '—à–µ—Å—Ç—å', 'seven': '—Å–µ–º—å',
       'eight': '–≤–æ—Å–µ–º—å', 'nine': '–¥–µ–≤—è—Ç—å', 'ten': '–¥–µ—Å—è—Ç—å'}


def num_translate(key):
    return num.get(key)


print(num_translate('zero'), '\n')  # None

# 2
print('*' * 50, '‚Ññ2\n')


def num_translate_adv(key):
    """
    'NoneType' object has no attribute 'title'
    :param key: 'one' <= str <= 'ten'
    :return: str
    """
    if num.get(key) == None:
        key = key.lower()
        return num.get(key).title()
    else:
        return num.get(key)


print(num_translate_adv('Nine'), '\n')

# 3
print('*' * 50, '‚Ññ3\n')


def thesaurus(*args):
    user_dict = {}
    for i in range(len(args)):
        user_list = []
        user_list.extend(list(filter(lambda x: x.startswith(args[i][:1]), args)))
        user_dict.setdefault(args[i][:1], user_list)
    return user_dict


print(thesaurus('–ê–Ω–≥–µ–ª–∏–Ω–∞', '–Æ–ª–∏—è', '–ü–æ–ª–∏–Ω–∞', '–ê–∫—Å–∏–Ω–∏—è', '–Æ—Ä–∏–π'), '\n')

# 4
print('*' * 50, '‚Ññ4\n')

# 5
print('*' * 50, '‚Ññ5\n')
nouns = ["–∞–≤—Ç–æ–º–æ–±–∏–ª—å", "–ª–µ—Å", "–æ–≥–æ–Ω—å", "–≥–æ—Ä–æ–¥", "–¥–æ–º"]
adverbs = ["—Å–µ–≥–æ–¥–Ω—è", "–≤—á–µ—Ä–∞", "–∑–∞–≤—Ç—Ä–∞", "–ø–æ–∑–∞–≤—á–µ—Ä–∞", "–Ω–æ—á—å—é"]
adjectives = ["–≤–µ—Å–µ–ª—ã–π", "—è—Ä–∫–∏–π", "–∑–µ–ª–µ–Ω—ã–π", "—É—Ç–æ–ø–∏—á–Ω—ã–π", "–º—è–≥–∫–∏–π"]


def get_jokes(num):
    """
    funny function üòÑ
    :param num: int
    :return: None
    """
    for i in range(1, (num + 1)):
        print(f'"{choice(nouns).title()} {choice(adverbs)} {choice(adjectives)}"')


get_jokes(2)
help(get_jokes)
